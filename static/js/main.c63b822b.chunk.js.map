{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","onAddMovie","useState","setQuery","movieData","setMovieData","errorMovie","setErrorMovie","isLoading","setIsLoading","handleSearchButtonClick","e","a","preventDefault","result","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","some","App","setMovies","newMovie","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c63b822b.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=1fe6f6cb';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\n\ninterface FindMovieProps {\n  onAddMovie: (movie: Movie) => void;\n  movies: Movie[]\n}\n\nexport const FindMovie: React.FC<FindMovieProps> = ({ onAddMovie, movies }) => {\n  const [query, setQuery] = useState('');\n  const [movieData, setMovieData] = useState<Movie | null>(null);\n  const [errorMovie, setErrorMovie] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSearchButtonClick: React\n    .MouseEventHandler<HTMLButtonElement> = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    try {\n      const result = await getMovie(query);\n\n      if ('Title' in result) {\n        const movie: Movie = {\n          title: result.Title,\n          description: result.Plot,\n          imgUrl: result.Poster !== 'N/A'\n            ? result.Poster\n            : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n          imdbUrl: `https://www.imdb.com/title/${result.imdbID}`,\n          imdbId: result.imdbID,\n        };\n\n        setQuery('');\n        setErrorMovie(false);\n        setMovieData(movie);\n      } else {\n        setMovieData(null);\n        setErrorMovie(true);\n      }\n    } finally {\n      setIsLoading(false); // Step 3: Set loading state to false\n    }\n  };\n\n  const handleAddButtonClick = () => {\n    if (movieData) {\n      const isMovieAlreadyAdded = movies\n        .some(movie => movie.imdbId === movieData.imdbId);\n\n      if (isMovieAlreadyAdded) {\n        setMovieData(null);\n      } else {\n        onAddMovie(movieData);\n        setMovieData(null);\n      }\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n    setErrorMovie(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': errorMovie,\n              })}\n              value={query}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {errorMovie && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={query === ''}\n              className={`button is-light ${isLoading ? 'is-loading' : ''}`}\n              onClick={handleSearchButtonClick}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movieData !== null && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddButtonClick}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movieData !== null && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          {movieData && <MovieCard movie={movieData} />}\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (newMovie: Movie) => {\n    setMovies(prevMovies => [...prevMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={handleAddMovie} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}